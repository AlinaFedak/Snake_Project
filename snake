import pygame
import time
import random

pygame.init()

black = (0, 0, 0)
white = (255, 255, 255)
red = (255, 0, 0)
green = (0, 255, 0)
blue = (0, 0, 255)
LIGHT_BLUE = (80, 80, 255)

window_x = 300
window_y = 300

mw = pygame.display.set_mode((window_x, window_y))
mw.fill(LIGHT_BLUE)

clock = pygame.time.Clock()

snake_speed = 10

points = 0

snake_position = [100, 50]

snake_body = [[100, 50],
			[90, 50],
			[80, 50],
			[70, 50]
			]

x1 = window_x / 2
y1 = window_y / 2

applex = round(random.randrange(0, window_x - snake_speed) / 10.0) * 10.0
appley = round(random.randrange(0, window_y - snake_speed) / 10.0) * 10.0

fruit_position = [random.randrange(1, (window_x//10)) * 10,
				random.randrange(1, (window_y//10)) * 10]

fruit_spawn = True

game_oveR = False

direction = 'RIGHT'
change_to = direction

class Label():
    def __init__(self, x=0, y=0, width=10, height=10, color=None):
        self.rect = pygame.Rect(x, y, width, height)
        self.fill_color = LIGHT_BLUE
        if color:
            self.fill_color = color
    def color(self, new_color):
        self.fill_color = new_color

    def fill(self):
        pygame.draw.rect(mw, self.fill_color, self.rect)

    def collidepoint(self, x, y):
        return self.rect.collidepoint(x, y)

    def colliderect(self,rect):
        return self.rect.colliderect(rect)

    def set_text(self, text, fsize=12, text_color=(0, 0, 0)):
        self.image = pygame.font.SysFont('verdana', fsize).render(text, True, text_color)

    def draw(self, shift_x=0, shift_y=0):
        self.fill()
        mw.blit(self.image, (self.rect.x + shift_x, self.rect.y + shift_y))

start_time = time.time()
cur_time = start_time

tim = Label(0, 5, 0 ,0, LIGHT_BLUE)
tim.set_text("Час:", 30)
tim.fill()
tim.draw()

counter = Label(250, 5, 0 ,0, LIGHT_BLUE)
counter.set_text("Рахунок:", 30)
counter.fill()
counter.draw()

tim_number = Label(0, 25, 0 ,0, LIGHT_BLUE)
tim_number.set_text(0, 30)
tim_number.fill()
tim_number.draw()

counter_number = Label(250, 25, 0 ,0, LIGHT_BLUE)
counter_number.set_text(0, 30)
counter_number.fill()
counter_number.draw()

while not game_oveR:
    mw.fill(LIGHT_BLUE)

	for event in pygame.event.get():
		if event.type == pygame.KEYDOWN:
			if event.key == pygame.K_UP:
				change_to = 'UP'
			if event.key == pygame.K_DOWN:
				change_to = 'DOWN'
			if event.key == pygame.K_LEFT:
				change_to = 'LEFT'
			if event.key == pygame.K_RIGHT:
				change_to = 'RIGHT'

	if change_to == 'UP' and direction != 'DOWN':
		direction = 'UP'
	if change_to == 'DOWN' and direction != 'UP':
		direction = 'DOWN'
	if change_to == 'LEFT' and direction != 'RIGHT':
		direction = 'LEFT'
	if change_to == 'RIGHT' and direction != 'LEFT':
		direction = 'RIGHT'

	if direction == 'UP':
		snake_position[1] -= 10
	if direction == 'DOWN':
		snake_position[1] += 10
	if direction == 'LEFT':
		snake_position[0] -= 10
	if direction == 'RIGHT':
		snake_position[0] += 10

	snake_body.insert(0, list(snake_position))
	if snake_position[0] == fruit_position[0] and snake_position[1] == fruit_position[1]:
        fruit_spawn = False
        points=points+1
	else:
		snake_body.pop()
		
	if not fruit_spawn:
		fruit_position = [random.randrange(1, (window_x//10)) * 10,
						random.randrange(1, (window_y//10)) * 10]

    fruit_spawn = True
	
	for pos in snake_body:
		pygame.draw.rect(mw, green,
						pygame.Rect(pos[0], pos[1], 10, 10))
	pygame.draw.rect(mw, red, pygame.Rect(
		fruit_position[0], fruit_position[1], 10, 10))

	for block in snake_body[1:]:
		if snake_position[0] == block[0] and snake_position[1] == block[1]:
			game_oveR = True

    # if x1 == applex and y1 == appley:
    #         applex = round(random.randrange(0, dis_width - snake_block) / 10.0) * 10.0
    #         appley = round(random.randrange(0, dis_height - snake_block) / 10.0) * 10.0
    #         snake_body.insert(0, list(snake_position))
    new_time = time.time()

    counter_number.set_text(str(points), 40, black)
    counter_number.draw()
    counter.draw()
    tim.draw()
    tim_number.draw()

    if int(new_time) - int(cur_time) == 1:
        tim_number.set_text(str(int(new_time-start_time)), 40, black)
        tim_number.draw()
        cur_time = new_time

	if snake_position[0] < 0 or snake_position[0] > window_x-10:
        lose = Label(-30,0,700,700,(200, 0, 50))
        lose.set_text("Ти програв", 70)
        lose.fill()
        lose.draw(window_x/2, window_y/2)
        resul_time = Label(70,270,0,0, (200, 0, 50))
        resul_time.set_text("Час проходження " + str(int(new_time - start_time)) + " секунд.", 40, black)
        resul_time.draw(0,0)
        game_oveR = True
	if snake_position[1] < 0 or snake_position[1] > window_y-10:
        lose = Label(-30,0,700,700,(200, 0, 50))
        lose.set_text("Ти програв", 70)
        lose.fill()
        lose.draw(window_x/2, window_y/2)
        resul_time = Label(70,270,0,0, (200, 0, 50))
        resul_time.set_text("Час проходження " + str(int(new_time - start_time)) + " секунд.", 40, black)
        resul_time.draw(0,0)
        game_oveR = True

	pygame.display.update()

	clock.tick(snake_speed)
